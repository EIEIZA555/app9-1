[{"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\index.js":"1","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\reportWebVitals.js":"2","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\App.js":"3","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-nav.js":"4","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-read.js":"5","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-create.js":"6","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-paginate.js":"7","D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-search.js":"8"},{"size":630,"mtime":1759824375790,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1666924111000,"results":"11","hashOfConfig":"10"},{"size":81,"mtime":1666928207000,"results":"12","hashOfConfig":"10"},{"size":1188,"mtime":1759823557013,"results":"13","hashOfConfig":"10"},{"size":1832,"mtime":1666928397000,"results":"14","hashOfConfig":"10"},{"size":1450,"mtime":1666928400000,"results":"15","hashOfConfig":"10"},{"size":4358,"mtime":1759824154852,"results":"16","hashOfConfig":"10"},{"size":5954,"mtime":1666928387000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11gaa6g",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\index.js",[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\reportWebVitals.js",[],[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\App.js",[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-nav.js",[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-read.js",[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-create.js",[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-paginate.js",[],[],[],"D:\\tlemobileapp\\tle\\app9-1\\local\\src\\db-search.js",["45"],["46"],"\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport React from 'react'\r\nimport './paginate-style.css'\r\n\r\nexport default function DBSearch() {\r\n    let [data, setData] = React.useState('')\r\n    let [page, setPage] = React.useState([])\r\n\r\n    //อ่านคีย์เวิร์ดจาก URL\r\n    let qStr = window.location.search\r\n    let params = new URLSearchParams(qStr)\r\n\r\n    React.useEffect(() => {\t\r\n\t\tfetch('/api/db/search?' + params)\r\n\t\t.then(response => response.json())\r\n\t\t.then(result => {      \r\n            showData(result)\r\n            paginate(result)\r\n\t\t})\r\n        .catch(err => alert(err))   \r\n    }, [])\r\n\r\n    const showData = (result) => {\r\n        const numDocs = result.totalDocs\r\n        const hidden = {\r\n            visibility: 'hidden' \r\n        }\r\n\r\n        let r = (\r\n        <div style={{maxWidth: '800px'}}>\r\n        <span class=\"float-start mt-2\">\r\n        { \r\n            (numDocs === 0) \r\n            ? <>ไม่พบข้อมูล</>\r\n            : <>พบข้อมูลทั้งหมด {result.totalDocs} รายการ</>\r\n        }\r\n        </span>\r\n        {/* แสดงฟอร์ม เพื่อรับคีย์เวิร์ดสำหรับการค้นหา */}\r\n        <form action=\"/db/search\" method=\"get\" class=\"float-end mb-2\">\r\n            <div class=\"d-inline-block\">\r\n                <input type=\"text\" name=\"q\" defaultValue={params.get('q')}\r\n                    class=\"form-control form-control-sm\"/>\r\n            </div>&nbsp;\r\n            <button class=\"btn btn-sm btn-primary\">ค้นหา</button> \r\n        </form>\r\n        <table class=\"table table-sm table-striped caption-top\" style={{maxWidth: '800px'}}>\r\n        <thead class=\"table-dark\">\r\n        <tr style={(numDocs === 0) ? hidden : null}>\r\n            <th>ชื่อสินค้า</th><th class=\"text-center\">ราคา</th>\r\n            <th class=\"text-center\">วันที่เพิ่มสินค้า</th><th>รายละเอียด</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n        result.docs.map(doc => {\r\n            //จัดรูปแบบวันเดือนปี ที่สามารถเข้าใจได้\r\n            let dt = new Date(Date.parse(doc.date_added))\r\n            let df = (\r\n                <>{dt.getDate()}-{dt.getMonth()+1}-{dt.getFullYear()}</>\r\n            )\r\n            let p = new Intl.NumberFormat().format(doc.price)\r\n            \r\n            return (\r\n            <tr>\r\n                <td>{doc.name}</td>\r\n                <td class=\"text-center\">{p}</td>\r\n                <td class=\"text-center\">{df}</td>\r\n                <td>{doc.detail}</td>\r\n            </tr>\r\n            )\r\n        })\r\n        }\r\n        </tbody>\r\n        </table>\r\n        </div>\r\n        )\r\n    \r\n        setData(r)\r\n    }\r\n\r\n    const paginate = (result) => {\r\n        if (result.totalPages === 1) {\r\n            setPage([])\r\n            return\r\n        }\r\n\r\n\t\tlet links = []\r\n        let q = params.get('q') || ''\r\n        let url = `/db/search?q=${q}&page=`\r\n\r\n        //เนื่องจากจำนวนข้อมูลตัวอย่างมีไม่มาก\r\n        //จึงให้แสดงหมายเลขในช่วง -/+ 2 จากเพจปัจจุบัน\r\n\r\n        //ให้แสดง 2 หมายเลขก่อนเพจปัจจุบัน แต่ต้องไม่ต่ำกว่า 1\r\n        let start = result.page - 2\r\n        start = (start < 1) ? 1 : start\r\n\r\n        //ถัดจากเพจปัจจุบัน ให้แสดงอีก 2 หมายเลข (ต้องไม่เกินจำนวนเพจทั้งหมด)\r\n        let end =  result.page + 2\r\n        end = (end < result.totalPages) ? end : result.totalPages\r\n\r\n        //ถ้าช่วงหมายเลขเพจที่แสดง ยังสามารถเลื่อนกลับไปยังหมายเลขที่ตำ่กว่านี้ได้\r\n        //ให้แสดงลิงก์ '|<' เพื่อสำหรับคลิกย้อนกลับไป\r\n        if (start > 1) {\r\n            links.push(\r\n                <li class=\"page-item\">\r\n                    <a href={url + 1} class=\"page-link\">{'|<'}</a>\r\n                </li>\r\n            )\r\n        }\r\n\r\n\t\tfor (let i = start; i <= end; i++) {\t\r\n\t\t\tif (i === result.page) {    \r\n\t\t\t\tlinks.push(\r\n                    <li class=\"page-item\">\r\n                        <a class=\"page-link active text-danger\">{i}</a>\r\n                    </li>\r\n                )\r\n\t\t\t} else {\r\n\t\t\t\tlinks.push(\r\n                    <li class=\"page-item\">\r\n                        <a href={url + i} class=\"page-link\">{i}</a>\r\n                    </li>\r\n                )\r\n\t\t\t}\r\n\t\t}\r\n\r\n        //ถ้าช่วงหมายเลขเพจที่แสดง ยังสามารถเลื่อนไปยังหมายเลขที่สูงกว่านี้ได้\r\n        //ให้แสดงลิงก์ '>|' เพื่อสำหรับคลิกย้อนไปยังเพจเหล่านั้น\r\n        if (end < result.totalPages) {\r\n            links.push(\r\n                <li class=\"page-item\">\r\n                    <a href={url + result.totalPages} class=\"page-link\">{'>|'}</a>\r\n                </li>                     \r\n            )\r\n        }\r\n\r\n        setPage(links)\r\n    }\r\n\r\n    return (\r\n        <div style={{margin:'20px'}}>\r\n            <div>{data}</div><br/>\r\n            <div>\r\n                <ul class=\"pagination\">\r\n                    {page.map(p => <>{p}</>)}\r\n                </ul>\r\n            </div>\r\n            <br/>\r\n            <a href=\"/db\">หน้าหลัก</a>\r\n        </div>\r\n    )\r\n}",{"ruleId":"47","severity":1,"message":"48","line":118,"column":25,"nodeType":"49","endLine":118,"endColumn":65},{"ruleId":"50","severity":1,"message":"51","line":23,"column":8,"nodeType":"52","endLine":23,"endColumn":10,"suggestions":"53","suppressions":"54"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'paginate', 'params', and 'showData'. Either include them or remove the dependency array.","ArrayExpression",["55"],["56"],{"desc":"57","fix":"58"},{"kind":"59","justification":"60"},"Update the dependencies array to be: [paginate, params, showData]",{"range":"61","text":"62"},"directive","",[603,605],"[paginate, params, showData]"]